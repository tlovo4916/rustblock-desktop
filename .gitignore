# =================================
# RustBlock Desktop .gitignore
# =================================

# Rust 编译产物
/target/
**/*.rs.bk
Cargo.lock  # 对于应用程序可以包含，对于库应该忽略

# Node.js 依赖和构建产物
node_modules/
/dist/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity
.pnp
.pnp.js

# Tauri 构建产物
src-tauri/target/
.tauri/

# 前端构建产物和缓存
.next/
.nuxt/
.cache/
.parcel-cache/
.vite/

# 环境变量和配置文件
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
config.json  # 包含API密钥等敏感信息时

# 日志文件
*.log
logs/
*.log.*

# IDE 和编辑器文件
.vscode/
.idea/
*.swp
*.swo
*~
.project
.classpath
.settings/

# 系统文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# 临时文件
*.tmp
*.temp
.temp/
.tmp/

# 备份文件
*.bak
*.backup
*~

# 测试覆盖率报告
coverage/
*.lcov
.nyc_output/

# 运行时文件
*.pid
*.seed
*.pid.lock

# 可选的npm缓存目录
.npm

# 可选的REPL历史
.node_repl_history

# 输出的二进制文件和安装包
*.exe
*.msi
*.dmg
*.pkg
*.deb
*.rpm
*.app
/bundle/

# 但是保留图标文件
!icons/

# 开发工具生成的文件
.eslintcache
.stylelintcache

# 本地数据库文件
*.db
*.sqlite
*.sqlite3

# 用户特定的项目文件
.vscode/settings.json
.vscode/tasks.json
.vscode/launch.json
.vscode/extensions.json

# 但保留推荐的扩展配置
!.vscode/extensions.json.example

# 文档生成的文件
/docs/build/

# 测试相关
.jest/
.coverage/

# 其他
*.orig
.merge_file* 